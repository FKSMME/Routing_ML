{
  "permissions": {
    "allow": [
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/test-responsive-layout.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /workspaces/Routing_ML_4/scripts/playwright-verify-template.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/verify-current-layout.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/verify-routing-workspace.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/verify-tabbed-layout.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 45s node /tmp/verify-tabs-simple.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/verify-5173-layout.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/debug-layout.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/verify-file-double-click.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/verify-file-modal-simple.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/verify-modal-ok.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/test-modal-visible.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/check-modal-dom.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/simple-double-click-test.js)",
      "Bash(lsof:*)",
      "Bash(xargs -r kill -9)",
      "Bash(ss:*)",
      "Bash(venv-linux/bin/python:*)",
      "Bash(npm run dev:*)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/verify-5173-layout-final.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/verify-5174-modal-final.js)",
      "Bash(cat:*)",
      "Bash(awk:*)",
      "Bash(node server.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 120s node /tmp/verify-all-effects.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/verify-5174-only.js)",
      "Bash(npm install:*)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/verify-ballpit-effects.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/debug-ballpit.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/check-react-errors.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/debug-ballpit.js)",
      "Bash(curl:*)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 60s node /tmp/check-test-box.js)",
      "Read(//tmp/**)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 45s node /tmp/simple-canvas-check.js)",
      "Bash(npm run build:*)",
      "Bash(tee:*)",
      "Bash(npx tsc:*)",
      "Bash(find:*)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/frontend-prediction/node_modules timeout 60s node /tmp/playwright-screenshot-test.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/frontend-prediction/node_modules timeout 45s node /tmp/simple-screenshot.js)",
      "Bash(NODE_PATH=./node_modules timeout 30s node /tmp/capture-both-ports.js)",
      "Bash(NODE_PATH=./node_modules timeout 30s node /tmp/capture-5174-only.js)",
      "Bash(cd:*)",
      "Bash(NODE_PATH=./node_modules timeout 40s node /tmp/check-console-errors.js)",
      "Bash(timeout 180s npm run build)",
      "Bash(npx lighthouse:*)",
      "Bash(NODE_PATH=./node_modules timeout 60s node /tmp/performance-metrics.js)",
      "Bash(git add:*)",
      "Bash(npx playwright:*)",
      "Bash(PLAYWRIGHT_SKIP_WEB_SERVER=1 npx playwright test tests/e2e/login-flow.spec.ts --reporter=line)",
      "Bash(PLAYWRIGHT_SKIP_WEB_SERVER=1 npx playwright test tests/e2e/login-flow.spec.ts --project=chromium --reporter=line)",
      "Bash(export PLAYWRIGHT_SKIP_WEB_SERVER=1)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 30s node /tmp/test-ballpit-loading.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 30s node /tmp/test-workspace-lazy-loading.js)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Add Algorithm Visualization workspace\n\n- Frontend: React Flow 노드 에디터 (좌측 파일 패널 + 우측 캔버스)\n- Backend: Python AST 파서 + FastAPI 엔드포인트 3개\n- Features: Dagre 자동 레이아웃, 드래그앤드롭, localStorage 위치 저장\n- UI: 개선된 노드 디자인 (gradient, glow effects)\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(python -m pip:*)",
      "Bash(python:*)",
      "Bash(source:*)",
      "Bash(/workspaces/Routing_ML_4/venv-linux/bin/python --version)",
      "Bash(/workspaces/Routing_ML_4/venv-linux/bin/pip list)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/test-algorithm-viz-integration.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/simple-algorithm-viz-test.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/test-with-login.js)",
      "Bash(NODE_PATH=/workspaces/Routing_ML_4/node_modules timeout 90s node /tmp/check-react-flow-console.js)",
      "Bash(python3:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Add visual enhancements - rainbow balls and transparency\n\n- Add 6 rainbow-colored floating balls to both frontends (5173, 5174)\n- Apply 20% transparency to all UI boxes (navigation + content cards)\n- Enhance 3000 homepage orbs (larger, more visible, rainbow colors)\n- Add comprehensive work logs (Part 1 & Part 2)\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git checkout:*)",
      "Bash(/workspaces/Routing_ML_4/venv-linux/bin/python -m pytest tests/backend -q)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Add project diagnosis and JWT secret validation\n\n- Add comprehensive diagnosis document (DIAGNOSIS_AND_IMPROVEMENT_PLAN.md)\n- Add JWT secret validation (rejects insecure defaults)\n- Identify 10 critical failure scenarios\n- Prioritize fixes into 5-phase checklist\n- Document Linux environment compatibility\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(/workspaces/Routing_ML_4/venv-linux/bin/pip install pytest==7.4.3 pytest-asyncio==0.21.1 pytest-cov==4.1.0 pytest-mock==3.12.0 -q)",
      "Bash(/workspaces/Routing_ML_4/venv-linux/bin/python -m pytest --version)",
      "Bash(/workspaces/Routing_ML_4/venv-linux/bin/python -m pytest tests/backend -v --collect-only)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(/workspaces/Routing_ML_4/venv-linux/bin/python -c \"import sys; sys.path.insert(0, ''''.''''); from tests.backend.api.test_master_data_tree import *\")"
    ],
    "deny": [],
    "ask": []
  }
}
