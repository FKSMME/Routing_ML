version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: routing-ml-backend
    ports:
      - "8000:8000"
    environment:
      # Security
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-min-32-chars-long-change-in-production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      # Database (PostgreSQL for internal stores, MSSQL for ERP views)
      - DB_TYPE=${DB_TYPE:-MSSQL}
      - RSL_DATABASE_URL=${RSL_DATABASE_URL:-postgresql+psycopg://postgres:postgres@localhost:5432/routing_ml}
      - ROUTING_GROUPS_DATABASE_URL=${ROUTING_GROUPS_DATABASE_URL:-postgresql+psycopg://postgres:postgres@localhost:5432/routing_ml}
      - MODEL_REGISTRY_URL=${MODEL_REGISTRY_URL:-postgresql+psycopg://postgres:postgres@localhost:5432/routing_ml}
      - MSSQL_SERVER=${MSSQL_SERVER:-K3-DB.ksm.co.kr,1433}
      - MSSQL_DATABASE=${MSSQL_DATABASE:-KsmErp}
      - MSSQL_USER=${MSSQL_USER:-FKSM_BI}
      - MSSQL_PASSWORD=${MSSQL_PASSWORD:-changeme}
      - MSSQL_ENCRYPT=${MSSQL_ENCRYPT:-True}
      - MSSQL_TRUST_CERTIFICATE=${MSSQL_TRUST_CERTIFICATE:-True}
      # Legacy Access DB (deprecated)
      # - ACCESS_DIR=${ACCESS_DIR:-/app/data/db}
      # Features
      - ENABLE_CANDIDATE_PERSISTENCE=${ENABLE_CANDIDATE_PERSISTENCE:-false}
      - ALLOWED_ORIGINS=http://localhost:3000,https://localhost:3000,http://localhost:5173,https://localhost:5173,http://localhost:5174,https://localhost:5174
    volumes:
      - ./models:/app/models
      - ./reports:/app/reports
      - ./data/db:/app/data/db
      - ./logs:/app/logs
    networks:
      - routing-ml-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Frontend - Prediction
  frontend-prediction:
    build:
      context: .
      dockerfile: Dockerfile.frontend-prediction
      args:
        - VITE_API_URL=http://localhost:8000
    container_name: routing-ml-frontend-prediction
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - routing-ml-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Frontend - Training
  frontend-training:
    build:
      context: .
      dockerfile: Dockerfile.frontend-training
      args:
        - VITE_API_URL=http://localhost:8000
    container_name: routing-ml-frontend-training
    ports:
      - "5174:80"
    depends_on:
      - backend
    networks:
      - routing-ml-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

networks:
  routing-ml-network:
    driver: bridge

volumes:
  models:
  reports:
  logs:
