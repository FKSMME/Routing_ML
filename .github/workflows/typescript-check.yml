name: TypeScript Type Check

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend-prediction/**/*.ts'
      - 'frontend-prediction/**/*.tsx'
      - 'frontend-training/**/*.ts'
      - 'frontend-training/**/*.tsx'
      - '.github/workflows/typescript-check.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend-prediction/**/*.ts'
      - 'frontend-prediction/**/*.tsx'
      - 'frontend-training/**/*.ts'
      - 'frontend-training/**/*.tsx'

jobs:
  type-check-prediction:
    name: TypeScript Check - Prediction Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend-prediction/package-lock.json

      - name: Install dependencies
        working-directory: frontend-prediction
        run: npm ci

      - name: Run TypeScript compiler
        working-directory: frontend-prediction
        run: npx tsc --noEmit

      - name: Report success
        if: success()
        run: echo "✅ Prediction Frontend - TypeScript 타입 체크 통과!"

      - name: Report failure
        if: failure()
        run: |
          echo "❌ Prediction Frontend - TypeScript 에러 발견!"
          echo "npx tsc --noEmit 명령어로 로컬에서 에러를 확인하세요."
          exit 1

  type-check-training:
    name: TypeScript Check - Training Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend-training/package-lock.json

      - name: Install dependencies
        working-directory: frontend-training
        run: npm ci

      - name: Run TypeScript compiler
        working-directory: frontend-training
        run: npx tsc --noEmit

      - name: Report success
        if: success()
        run: echo "✅ Training Frontend - TypeScript 타입 체크 통과!"

      - name: Report failure
        if: failure()
        run: |
          echo "❌ Training Frontend - TypeScript 에러 발견!"
          echo "npx tsc --noEmit 명령어로 로컬에서 에러를 확인하세요."
          exit 1

  summary:
    name: Type Check Summary
    runs-on: ubuntu-latest
    needs: [type-check-prediction, type-check-training]
    if: always()

    steps:
      - name: Check results
        run: |
          if [ "${{ needs.type-check-prediction.result }}" == "success" ] && [ "${{ needs.type-check-training.result }}" == "success" ]; then
            echo "🎉 모든 TypeScript 타입 체크 통과!"
            echo "Prediction: ✅"
            echo "Training: ✅"
          else
            echo "❌ TypeScript 타입 체크 실패"
            echo "Prediction: ${{ needs.type-check-prediction.result }}"
            echo "Training: ${{ needs.type-check-training.result }}"
            exit 1
          fi
