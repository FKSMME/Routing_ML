*** Begin Patch
*** Update File: frontend-prediction/src/components/routing/ErpItemExplorer.tsx
@@
         </div>
         <div className="erp-item-explorer__search-row">
           <form className="erp-item-explorer__search" onSubmit={handleSearchSubmit}>
             <Search size={16} />
             <input
               type="search"
               placeholder="품목 코드 검색..."
               value={searchDraft}
               onChange={(event) => setSearchDraft(event.target.value)}
             />
             <button type="submit">검색</button>
           </form>
           <div className="erp-item-explorer__filters">
             <button type="button" onClick={handleSelectFiltered} disabled={filteredItems.length === 0}>
               <Filter size={14} />
               필터 선택 ({filteredItems.length})
             </button>
             <button type="button" onClick={handleClearSelection} disabled={selectedCount === 0}>
               선택 해제 ({selectedCount})
             </button>
           </div>
         </div>
+        <div className="erp-item-explorer__drag-strip">
+          <div
+            className={["erp-item-explorer__chip", availableItems.length === 0 ? "is-disabled" : ""].join(" ")}
+            draggable={availableItems.length > 0}
+            onDragStart={(event) => handleDragStart(event, availableItems, "all")}
+            onDragEnd={handleDragEnd}
+            role="button"
+            tabIndex={-1}
+          >
+            전체 노드 ({availableItems.length})
+          </div>
+          <div
+            className={["erp-item-explorer__chip", filteredItems.length === 0 ? "is-disabled" : ""].join(" ")}
+            draggable={filteredItems.length > 0}
+            onDragStart={(event) => handleDragStart(event, filteredItems, "filtered")}
+            onDragEnd={handleDragEnd}
+            role="button"
+            tabIndex={-1}
+          >
+            필터 결과 ({filteredItems.length})
+          </div>
+          <div
+            className={["erp-item-explorer__chip", selectedCount === 0 ? "is-disabled" : ""].join(" ")}
+            draggable={selectedCount > 0}
+            onDragStart={(event) => handleDragStart(event, Array.from(selectedItems), "selected")}
+            onDragEnd={handleDragEnd}
+            role="button"
+            tabIndex={-1}
+          >
+            선택한 노드 ({selectedCount})
+          </div>
+          <button
+            type="button"
+            className="erp-item-explorer__chip erp-item-explorer__chip--primary"
+            disabled={selectedCount === 0}
+            onClick={() => handleQuickAdd(Array.from(selectedItems))}
+          >
+            선택 추가
+          </button>
+          <button
+            type="button"
+            className="erp-item-explorer__chip erp-item-explorer__chip--primary"
+            disabled={filteredItems.length === 0}
+            onClick={() => handleQuickAdd(filteredItems)}
+          >
+            필터 추가
+          </button>
+        </div>
       </header>
 
       <div className="erp-item-explorer__content">
         {statusMessage ? (
           <div className="erp-item-explorer__status">
             {isSampleLoading || isViewsLoading ? <Loader2 className="erp-item-explorer__spinner" size={18} /> : null}
             <span>{statusMessage}</span>
             {viewsError && (
               <p className="erp-item-explorer__error-detail">
                 {(viewsError instanceof Error ? viewsError.message : String(viewsError)) ?? ""}
               </p>
             )}
             {sampleError && (
               <p className="erp-item-explorer__error-detail">
                 {(sampleError instanceof Error ? sampleError.message : String(sampleError)) ?? ""}
               </p>
             )}
           </div>
         ) : (
           <div className="erp-item-explorer__grid-wrapper">
             <div className="erp-item-explorer__grid">
-              {filteredItems.map((item) => {
+              {paginatedItems.map((item) => {
                 const isSelected = selectedItems.has(item);
                 return (
                   <button
                     key={item}
                     type="button"
@@
                   </button>
                 );
               })}
             </div>
           </div>
         )}
       </div>
+      {!statusMessage && paginatedItems.length > 0 ? (
+        <footer className="erp-item-explorer__footer">
+          <div className="erp-item-explorer__footer-info">
+            {startIndex + 1} - {endIndex} / {totalFiltered}건 표시
+            {rowCount > sampleRows.length ? ` · 샘플 ${sampleRows.length}/${rowCount}` : ""}
+          </div>
+          <div className="erp-item-explorer__footer-controls">
+            <button type="button" onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage <= 1}>
+              이전
+            </button>
+            <span>
+              {currentPage} / {totalPages}
+            </span>
+            <button type="button" onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage >= totalPages}>
+              다음
+            </button>
+          </div>
+          <div className="erp-item-explorer__footer-size">
+            <label>
+              페이지 크기
+              <select value={pageSize} onChange={handlePageSizeChange}>
+                {PAGE_SIZE_OPTIONS.map((option) => (
+                  <option key={option} value={option}>
+                    {option}개
+                  </option>
+                ))}
+              </select>
+            </label>
+          </div>
+          {canLoadMore ? (
+            <button type="button" className="erp-item-explorer__load-more" onClick={handleLoadMore}>
+              더 불러오기 ({sampleRows.length}/{rowCount})
+            </button>
+          ) : null}
+        </footer>
+      ) : null}
     </div>
   );
 }
*** End Patch
